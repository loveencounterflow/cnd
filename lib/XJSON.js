// Generated by CoffeeScript 1.9.3
(function() {
  var CND, rpr;

  CND = require('./main');

  rpr = CND.rpr;

  this.replacer = function(key, value) {
    var R;
    if ((CND.type_of(value)) !== 'set') {
      return value;
    }
    R = {
      '~isa': 'set',
      '%self': Array.from(value)
    };
    return R;
  };

  this.reviver = function(key, value) {
    if (!((CND.isa_pod(value)) && (value['~isa'] === 'set'))) {
      return value;
    }
    return new Set(value['%self']);
  };

  this.stringify = function(value, replacer, spaces) {
    if (replacer == null) {
      replacer = this.replacer;
    }
    return JSON.stringify(value, replacer, spaces);
  };

  this.parse = function(text, reviver) {
    if (reviver == null) {
      reviver = this.reviver;
    }
    return JSON.parse(text, reviver);
  };

  this._demo = function() {
    var XJSON, d, e;
    XJSON = this;
    e = new Set('xy');
    e.add(new Set('abc'));
    d = ['A', 'B', e];
    help(d);
    info(XJSON.stringify(d));
    return info(XJSON.parse(XJSON.stringify(d)));
  };

  this.replacer = this.replacer.bind(this);

  this.reviver = this.reviver.bind(this);

  this.stringify = this.stringify.bind(this);

  this.parse = this.parse.bind(this);

  this._demo = this._demo.bind(this);

  if (module.parent == null) {
    this._demo();
  }

}).call(this);
